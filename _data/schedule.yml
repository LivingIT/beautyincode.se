- timeslot: "08:15 - 09:00"
  name: "The doors open"
  image: "/images/welcome.jpg"

- timeslot: "09:00 - 09:45"
  name: "GeePaw Hill"
  title: "Changing Changing Software: An Introduction to Change-Harvesting"
  image: "/images/geepaw-hill.jpg"
  description: |
    At its center, the software trade is about changing software. From the outside,
    the trade seems to be flourishing, but when you look close, you see the
    unmistakable signs of a feverish and decidedly unhealthy entity. So we're going
    to have to change it. In this talk, GeePaw introduces the various challenges we
    face in changing changing software, and offers an approach: re-centering our
    entire trade — not just the code or the coding, but the entire industry — around
    the fundamental activity: harvesting the value from making one change, then using
    that value to fuel the next one. It's change, harvest, change, harvest, change,
    harvest, over and over, day after day, world without end.

- timeslot: "09:45 - 10:15"
  name: "Fika"
  image: "/images/fika.jpg"

- timeslot: "10:15 - 11:00"
  name: "Nyari Samushonga"
  title: "Misguided Loyalties"
  image: "/images/nyari.jpg"
  description: |
    We all want to predictably deliver quality software solutions. Many
    technical and process methodologies have been created to make this
    possible. Yet time and again we repeat the age old patterns of late
    delivery and poor quality, ensuring we continue to face the backlash of
    unmet expectations. Could it be that while we profess to want to do better,
    our overt and hidden attachments to unproductive ways mean we self sabotage
    and follow patterns that ensure repeated failure? In this talk I'd like us
    to peel away the layers and take a close look at some of the ways that what
    we do ensures we do not get what we want. We have the tools to win we just
    need to choose to use them.

- timeslot: "11:15 - 12:00"
  name: "Dr. Markus Borg"
  title: "Trained, not coded – Beauty in Software 2.0"
  image: "/images/markus-borg.jpg"
  description: |
    Deep learning has revolutionized several application areas, especially within
    computer vision. However, developing systems that rely on machine learning (ML)
    introduces new challenges. As features are trained rather than coded, the beauty
    concept must expand to cover also data. But even with beauty in the training data,
    how could we possibly trust AI in critical applications such as self-driving cars?

    In this talk, we will look at testing of a pedestrian detection system in
    state-of-the-art automotive simulators. We will discuss how the concept of
    safety fundamentally changes with ML and present a promising approach to testing.
    By embracing beauty in test code, we will demonstrate evolutionary test case
    generation for testing of trained systems – using AI to test AI.

- timeslot: "12:00 - 13:00"
  name: "Lunch"
  image: "/images/lunch.jpg"
  description: |
    Lemon and oregano chicken, wild rice, Chevré, pickled carrots, lace bowl, roasted walnuts with orange dressing and honey vinaigrette.

    **Vegetarian and vegan option:** Red quinoa, beetroot hummus, baked butternut squash, broccoli, pickled red onion, alfalfa sprouts, roasted sunflower seeds with basil and lemon dressing.

- timeslot: "13:00 - 13:45"
  name: "Kevlin Henney"
  title: "Lambda? You Keep Using that Letter"
  image: "/images/kevlin-henney.jpg"
  description: |
    Lambdas. All the cool kid languages have them. But does 'lambda' mean what
    C#, Java, Python, C++, etc. mean by 'lambda'? Where did lambdas come from?
    What were they originally for? What is their relationship to data
    abstraction?

    In this session we will look into the history, the syntax and the uses of
    lambdas and the way in which lambda constructs in various languages do (or
    do not) match the original construct introduced in lambda calculus.

- timeslot: "14:00 - 14:45"
  name: "Aslam Khan"
  title: "Beauty and the Beast"
  image: "/images/aslam.jpg"
  description: |
    One fine day, a developer was deep in the flow of coding; and beauty was
    pouring out of that keyboard.
    In a split second, the developer stopped.
    A tiny thought emerged.
    It scared the developer.
    It was too risky to attempt.
    It would tarnish the beauty that was created.
    The thought evaporated.
    The developer continued, ignoring the signs.
    Over time, it became harder and harder still to keep it beautiful.
    Eventually, the software was no more; and talk of it's beauty died with it.
    The developer pondered and went back in time to those moments of fear and
    wondered what would have happened if the risky option was attempted.
    That very thought scared the developer; and what came of this developer of
    beauty, we don't know.

    This talk is about taking risks; the beast that co-exists with beauty.
    I'll share some risks I've taken and what has helped me along the way;
    and why I embrace the beast that is risk.

- timeslot: "14:45 - 15:15"
  name: "Coffee"
  image: "/images/coffee.jpg"

- timeslot: "15:15 - 16:00"
  name: "Dr. Alistair Cockburn"
  # title: ""
  image: "/images/alistair-cockburn.jpg"
  # description: |
  #   You can write [Markdown](https://daringfireball.net/projects/markdown/) here. Want several paragraphs?
  #
  #   Be sure to leave an empty line between each paragraph and Jekyll will handle the rest.
